name: CI
 
on: 
    push:
        branches:
            - master
    pull_request:
 
jobs:
    tests:
        name: Lint & Tests
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                os: [ubuntu-latest]
                node-version: ['10', '12', '14']
        steps:
            - name: Check out a copy of the repo
              uses: actions/checkout@v2
 
            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v1
              with:
                node-version: ${{ matrix.node-version }}

            - name: Get yarn cache directory path
              id: yarn-cache-dir-path
              run: echo "::set-output name=dir::$(yarn config get cacheFolder)"
              
            - uses: actions/cache@v2
              id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
              with:
                path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
                key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
                restore-keys: |
                  ${{ runner.os }}-yarn-

            - run: yarn install --frozen-lockfile --non-interactive

            - run: yarn install
            - run: yarn lint
            - run: yarn test
    
    ember-try:
        name: Ember try ember-${{matrix.scenario}}
    
        runs-on: ubuntu-latest
    
        strategy:
            fail-fast: false
            max-parallel: 1
            matrix:
                os: [ubuntu-latest]
                node-version: ['10', '12', '14']
                scenario: [ember-3.16, ember-3.20, ember-release, ember-beta, ember-canary, ember-default-with-jquery, ember-classic]
        steps:
            - uses: actions/checkout@v2
            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v1
              with:
                node-version: ${{ matrix.node-version }}

            - name: Get yarn cache directory path
              id: yarn-cache-dir-path
              run: echo "::set-output name=dir::$(yarn config get cacheFolder)"
              
            - uses: actions/cache@v2
              id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
              with:
                path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
                key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
                restore-keys: |
                  ${{ runner.os }}-yarn-

            - run: yarn install --frozen-lockfile --non-interactive
            - name: Running test
              run: yarn ember try:one ${{ matrix.scenario }}